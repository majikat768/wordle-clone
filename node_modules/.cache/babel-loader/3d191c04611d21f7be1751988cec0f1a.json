{"ast":null,"code":"import React from'react';import Space from'./Space';import{useContext}from'react';import{AppContext}from'./App';import{jsx as _jsx}from\"react/jsx-runtime\";var Board=function Board(props){var _useContext=useContext(AppContext),board=_useContext.board,attempt=_useContext.attempt,word=_useContext.word,gameover=_useContext.gameover;var rows=[];for(var i=0;i<6;i+=1){var row=[];var w=word.slice();var statuses=['wrong','wrong','wrong','wrong','wrong'];for(var j=0;j<5;j+=1){if(w[j]===board[i][j]){statuses[j]='correct';w=w.replace(board[i][j],'.');}}for(var _j=0;_j<5;_j+=1){if(statuses[_j]!=='correct'&&w.includes(board[i][_j])){statuses[_j]='almost';w=w.replace(board[i][_j],'.');}}for(var _j2=0;_j2<5;_j2+=1){var status=void 0;if(i>attempt){if(gameover){status='done';}else{status='none';}}else if(i===attempt){if(gameover){status='done';}else{status='current';}}else if(i<attempt){status=statuses[_j2];}row.push(/*#__PURE__*/_jsx(Space,{attempt:i,space:_j2,status:status},[i,_j2]));}rows.push(row);}return/*#__PURE__*/_jsx(\"div\",{className:\"board\",children:rows.map(function(row){return/*#__PURE__*/_jsx(\"div\",{className:\"guess\",children:row});})});};export default Board;","map":{"version":3,"names":["React","Space","useContext","AppContext","Board","props","board","attempt","word","gameover","rows","i","row","w","slice","statuses","j","replace","includes","status","push","map"],"sources":["/var/www/micatk/wordle-solver/src/Board.js"],"sourcesContent":["import React from 'react';\r\nimport Space from './Space'\r\nimport { useContext } from 'react';\r\nimport { AppContext } from './App';\r\n\r\nconst Board = function (props) {\r\n\r\n    const { board, attempt, word, gameover } = useContext(AppContext);\r\n    const rows = [];\r\n\r\n    for (let i = 0; i < 6; i += 1) {\r\n        let row = [];\r\n        let w = word.slice();\r\n        let statuses = ['wrong','wrong','wrong','wrong','wrong'];\r\n        for(let j = 0; j < 5; j += 1) {\r\n            if(w[j] === board[i][j]) {\r\n                statuses[j] = 'correct';\r\n                w = w.replace(board[i][j],'.');\r\n            }\r\n        }\r\n        for(let j = 0; j < 5; j += 1) {\r\n            if(statuses[j] !== 'correct' && w.includes(board[i][j])) {\r\n                statuses[j] = 'almost';\r\n                w = w.replace(board[i][j],'.');\r\n            }\r\n        }\r\n\r\n        for (let j = 0; j < 5; j += 1) {\r\n            let status;\r\n            if(i > attempt) {\r\n                if(gameover) {\r\n                    status = 'done';\r\n                }\r\n                else {\r\n                    status = 'none';\r\n                }\r\n            }\r\n            else if(i === attempt) {\r\n                if(gameover) {\r\n                    status = 'done';\r\n                }\r\n                else {\r\n                    status = 'current';\r\n                }\r\n            }\r\n            else if(i < attempt) {\r\n                status = statuses[j];\r\n            }\r\n            row.push(\r\n                <Space\r\n                attempt = {i}\r\n                space = {j}\r\n                status = {status}\r\n                key = {[i, j]}\r\n                />\r\n            )\r\n        }\r\n        rows.push(row)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='board'>\r\n            {rows.map((row) => <div className='guess'>{row}</div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;\r\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,MAAP,KAAkB,SAAlB,CACA,OAASC,UAAT,KAA2B,OAA3B,CACA,OAASC,UAAT,KAA2B,OAA3B,C,2CAEA,GAAMC,MAAK,CAAG,QAARA,MAAQ,CAAUC,KAAV,CAAiB,CAE3B,gBAA2CH,UAAU,CAACC,UAAD,CAArD,CAAQG,KAAR,aAAQA,KAAR,CAAeC,OAAf,aAAeA,OAAf,CAAwBC,IAAxB,aAAwBA,IAAxB,CAA8BC,QAA9B,aAA8BA,QAA9B,CACA,GAAMC,KAAI,CAAG,EAAb,CAEA,IAAK,GAAIC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAI,CAA5B,CAA+B,CAC3B,GAAIC,IAAG,CAAG,EAAV,CACA,GAAIC,EAAC,CAAGL,IAAI,CAACM,KAAL,EAAR,CACA,GAAIC,SAAQ,CAAG,CAAC,OAAD,CAAS,OAAT,CAAiB,OAAjB,CAAyB,OAAzB,CAAiC,OAAjC,CAAf,CACA,IAAI,GAAIC,EAAC,CAAG,CAAZ,CAAeA,CAAC,CAAG,CAAnB,CAAsBA,CAAC,EAAI,CAA3B,CAA8B,CAC1B,GAAGH,CAAC,CAACG,CAAD,CAAD,GAASV,KAAK,CAACK,CAAD,CAAL,CAASK,CAAT,CAAZ,CAAyB,CACrBD,QAAQ,CAACC,CAAD,CAAR,CAAc,SAAd,CACAH,CAAC,CAAGA,CAAC,CAACI,OAAF,CAAUX,KAAK,CAACK,CAAD,CAAL,CAASK,CAAT,CAAV,CAAsB,GAAtB,CAAJ,CACH,CACJ,CACD,IAAI,GAAIA,GAAC,CAAG,CAAZ,CAAeA,EAAC,CAAG,CAAnB,CAAsBA,EAAC,EAAI,CAA3B,CAA8B,CAC1B,GAAGD,QAAQ,CAACC,EAAD,CAAR,GAAgB,SAAhB,EAA6BH,CAAC,CAACK,QAAF,CAAWZ,KAAK,CAACK,CAAD,CAAL,CAASK,EAAT,CAAX,CAAhC,CAAyD,CACrDD,QAAQ,CAACC,EAAD,CAAR,CAAc,QAAd,CACAH,CAAC,CAAGA,CAAC,CAACI,OAAF,CAAUX,KAAK,CAACK,CAAD,CAAL,CAASK,EAAT,CAAV,CAAsB,GAAtB,CAAJ,CACH,CACJ,CAED,IAAK,GAAIA,IAAC,CAAG,CAAb,CAAgBA,GAAC,CAAG,CAApB,CAAuBA,GAAC,EAAI,CAA5B,CAA+B,CAC3B,GAAIG,OAAM,OAAV,CACA,GAAGR,CAAC,CAAGJ,OAAP,CAAgB,CACZ,GAAGE,QAAH,CAAa,CACTU,MAAM,CAAG,MAAT,CACH,CAFD,IAGK,CACDA,MAAM,CAAG,MAAT,CACH,CACJ,CAPD,IAQK,IAAGR,CAAC,GAAKJ,OAAT,CAAkB,CACnB,GAAGE,QAAH,CAAa,CACTU,MAAM,CAAG,MAAT,CACH,CAFD,IAGK,CACDA,MAAM,CAAG,SAAT,CACH,CACJ,CAPI,IAQA,IAAGR,CAAC,CAAGJ,OAAP,CAAgB,CACjBY,MAAM,CAAGJ,QAAQ,CAACC,GAAD,CAAjB,CACH,CACDJ,GAAG,CAACQ,IAAJ,cACI,KAAC,KAAD,EACA,OAAO,CAAIT,CADX,CAEA,KAAK,CAAIK,GAFT,CAGA,MAAM,CAAIG,MAHV,EAIO,CAACR,CAAD,CAAIK,GAAJ,CAJP,CADJ,EAQH,CACDN,IAAI,CAACU,IAAL,CAAUR,GAAV,EACH,CAGD,mBACI,YAAK,SAAS,CAAC,OAAf,UACKF,IAAI,CAACW,GAAL,CAAS,SAACT,GAAD,qBAAS,YAAK,SAAS,CAAC,OAAf,UAAwBA,GAAxB,EAAT,EAAT,CADL,EADJ,CAKH,CA7DD,CA+DA,cAAeR,MAAf"},"metadata":{},"sourceType":"module"}